name: Release

# responsble for creating a "release" for an event
# which will bundle the baner and presentations
# into a zip / tarball so that it can be easily
# downloaded the day of the event

on:
  workflow_dispatch:
    inputs:
      date:
        description: "Event Date (yyyy-mm-dd)"
        required: true
        type: string

jobs:
  prepare_event:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Archive Files
        run: |
          mkdir event_files
          cp ./public/banners/${{ github.event.inputs.date }}.png event_files/
          cp ./public/presentations/${{ github.event.inputs.date }}-*.pdf event_files/
          tar -czvf event-${{ github.event.inputs.date }}.tar.gz event_files
          zip -r event-${{ github.event.inputs.date }}.zip event_files

      - name: Create Event
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: event-${{ github.event.inputs.date }}
          release_name: Event ${{ github.event.inputs.date }}
          draft: false
          prerelease: false

      - name: Upload Event Artifact (tar.gz)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This is the step ID of the Create Event step
          asset_path: ./event-${{ github.event.inputs.date }}.tar.gz
          asset_name: event-${{ github.event.inputs.date }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Event Artifact (zip)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./event-${{ github.event.inputs.date }}.zip
          asset_name: event-${{ github.event.inputs.date }}.zip
          asset_content_type: application/zip
