name: Speaker Issue to PR

on:
  issues:
    types: [opened, reopened]

jobs:
  createPR:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Check Issue Title
        run: |
          if [[ "${{ github.event.issue.title }}" != "[Speaker]*" ]]; then
            echo "Issue does not start with [Speaker]. Exiting..."
            exit 0
          fi

      - name: Issue Forms Body Parser
        id: parse
        uses: zentered/issue-forms-body-parser@v2.0.0

      - name: Issue Definitions
        id: define
        run: |
          jsonData='${{ steps.parse.outputs.data }}'
          source shell/output-issue-key.sh

          makeoutput "$jsonData" name name
          makeoutput "$jsonData" git-hub-username gitHubUsername
          makeoutput "$jsonData" linked-in-profile-url linkedInProfileURL
          makeoutput "$jsonData" website website
          makeoutput "$jsonData" profile-image profileImage

      - name: Log
        run: |
          echo "${{ steps.define.outputs }}"

      # - name: Create Slug
      #   id: slug
      #   run: |
      #     echo "slug=$(echo '${{ steps.define.outputs.name }}' | tr '[:upper:]' '[:lower:]' | sed -e 's/[^a-zA-Z0-9]/-/g' -e 's/--*/-/g')" >> $GITHUB_OUTPUT

      # - name: Create new speaker file
      #   run: |
      #     echo "---" > ./src/content/speakers/${{ steps.slug.outputs.slug }}.md

      #     add_url() {
      #       property_name=$1
      #       property_value=$2
      #       # Enhanced URL pattern for validation
      #       url_pattern="^(https?://)?([a-zA-Z0-9-]+\.)+[a-zA-Z]{2,}(/[-a-zA-Z0-9:%_+.~#?&//=]*)?$"
            
      #       if [[ -n "$property_value" ]]; then
      #         # Remove any < or > characters
      #         property_value=$(echo "$property_value" | sed 's/[<>]//g')
              
      #         # Check if the property_value matches the URL pattern
      #         if [[ $property_value =~ $url_pattern ]]; then
      #           echo "$property_name: $property_value" >> ./src/content/speakers/${{ steps.slug.outputs.slug }}.md
      #         else
      #           echo "Invalid URL: $property_value"
      #         fi
      #       fi
      #     }

      #     # Check if githubUsername is not empty
      #     if [ -n "${{ steps.define.outputs.githubUsername }}" ]; then
      #       githubUsername=$(echo '${{ steps.define.outputs.githubUsername }}' | sed 's/@//g')
      #       echo "githubUsername: $githubUsername" >> ./src/content/speakers/${{ steps.slug.outputs.slug }}.md
      #     fi

      #     # Corrected function calls
      #     add_url "linkedInProfileURL" "${{ steps.define.outputs.linkedInProfileURL }}"
      #     add_url "profileImage" "${{ steps.define.outputs.profileImage }}"

      #     # Check if name is not empty
      #     if [ -n "${{ steps.define.outputs.name }}" ]; then
      #       echo "name: ${{ steps.define.outputs.name }}" >> ./src/content/speakers/${{ steps.slug.outputs.slug }}.md
      #     fi

      #     add_url "website" "${{ steps.define.outputs.website }}"

      #     echo "---" >> ./src/content/speakers/${{ steps.slug.outputs.slug }}.md
      #     echo "" >> ./src/content/speakers/${{ steps.slug.outputs.slug }}.md

      # - name: Create Pull Request
      #   uses: peter-evans/create-pull-request@v3
      #   with:
      #     commit-message: 'New Speaker Submission: ${{  steps.define.outputs.name }} (#${{ github.event.issue.number }})'
      #     title: 'New Speaker Submission: ${{  steps.define.outputs.name }}'
      #     body: |
      #       Adds a new speaker based on issue #${{ github.event.issue.number }}.
      #     branch: 'new-speaker-${{ steps.slug.outputs.slug }}-${{ github.run_id }}'
