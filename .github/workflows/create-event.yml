name: Create Event

on:
  issues:
    types: [opened, reopened]
  workflow_call:
    inputs:
      date:
        type: string
        description: 'Event Date (YYYY-MM-DD)'
        required: false
      meetup:
        type: string
        description: 'Meetup Link'
        required: false
      presentationTitle:
        type: string
        description: 'Presentation Title'
        required: false
      eventTitle:
        type: string
        description: 'Event Title'
        required: false
      website:
        type: string
        description: 'Website'
        required: false
  workflow_dispatch:
    inputs:
      date:
        type: string
        description: 'Event Date (YYYY-MM-DD)'
        required: false
      meetup:
        type: string
        description: 'Meetup Link'
        required: false
      presentationTitle:
        type: string
        description: 'Presentation Title'
        required: false
      eventTitle:
        type: string
        description: 'Event Title'
        required: false
      website:
        type: string
        description: 'Website'
        required: false

jobs:
  capture-json:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm i
        if: steps.npm-cache.outputs.cache-hit != 'true'

      - name: Run script and capture output
        id: issueForm
        run: ./script/commentbody ${{ github.event.issue.number }}

      - name: Set output
        id: merge
        run: ./script/mergejson "${{ fromJson(steps.issueForm.outputs) }}" "${{ fromJson(github.event.inputs) }}"

      - name: log
        run: echo "${{ fromJson(steps.merge.outputs) }}"

  # create-pr:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '20' # Set this to the node version you are using

  #     - name: Operation
  #       run: |
  #         npm install
  #         ./scripts/mkall \
  #           --updateAll \
  #           --date "${{ github.event.inputs.date }}" \
  #           --githubUsername "${{ github.event.inputs.githubUsername }}" \
  #           --googleCal "${{ github.event.inputs.googleCal }}" \
  #           --ical "${{ github.event.inputs.ical }}" \
  #           --linkedin "${{ github.event.inputs.linkedin }}" \
  #           --meetup "${{ github.event.inputs.meetup }}" \
  #           --name "${{ github.event.inputs.name }}" \
  #           --presentations "${{ github.event.inputs.presentations }}" \
  #           --profileImage "${{ github.event.inputs.profileImage }}" \
  #           --slides "${{ github.event.inputs.slides }}" \
  #           --slidesSource "${{ github.event.inputs.slidesSource }}" \
  #           --presentationTitle "${{ github.event.inputs.presentationTitle }}" \
  #           --eventTitle "${{ github.event.inputs.eventTitle }}" \
  #           --website "${{ github.event.inputs.website }}"
  #         git config user.name "github-actions"
  #         git config user.email "github-actions@github.com"
  #         git add .
  #         git checkout -b "content-${{ github.run_id }}"
  #         git commit -m "Automated Content Changes"
  #         git push origin "content-${{ github.run_id }}"

  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v3
  #       with:
  #         commit-message: Automated Content Changes
  #         title: Automated Content Changes
  #         body: Automated Content Changes
  #         branch: 'content-${{ github.run_id }}'
